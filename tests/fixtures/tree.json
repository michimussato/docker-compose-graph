[
  {
    "include": [
      {
        "path": [
          "./docker-third-party/cgwire/docker-compose.kitsu.yaml"
        ]
      },
      {
        "path": [
          "../repos/ayon-docker/docker-compose.yml",
          "./docker-third-party/ayon/docker-compose.override.yml"
        ]
      }
    ],
    "services": {
      "mongodb-10-2": {
        "container_name": "mongodb-10-2",
        "hostname": "mongodb-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "image": "mongodb/mongodb-community-server:4.4-ubuntu2004",
        "networks": [
          "mongodb",
          "repository"
        ],
        "environment": [
          "MONGO_PORT=${MONGO_DB_PORT_CONTAINER}"
        ],
        "command": "--dbpath /opt/Thinkbox/DeadlineDatabase10/mongo/data --bind_ip_all --noauth --storageEngine wiredTiger --tlsMode disabled\n",
        "ports": [
          "${MONGO_DB_PORT_HOST}:${MONGO_DB_PORT_CONTAINER}"
        ],
        "volumes": [
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/DeadlineDatabase10/mongo/data_LOCAL:/opt/Thinkbox/DeadlineDatabase10/mongo/data",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}:ro"
        ]
      },
      "mongo-express-10-2": {
        "container_name": "mongo-express-10-2",
        "hostname": "mongo-express-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "depends_on": [
          "mongodb-10-2"
        ],
        "image": "mongo-express",
        "networks": [
          "mongodb"
        ],
        "restart": "always",
        "ports": [
          "${MONGO_EXPRESS_PORT_HOST}:${MONGO_EXPRESS_PORT_CONTAINER}"
        ],
        "environment": [
          "ME_CONFIG_BASICAUTH_USERNAME=web",
          "ME_CONFIG_BASICAUTH_PASSWORD=web",
          "ME_CONFIG_OPTIONS_EDITORTHEME=darcula",
          "ME_CONFIG_MONGODB_SERVER=mongodb-10-2",
          "ME_CONFIG_MONGODB_URL=mongodb://admin:pass@localhost:${MONGO_DB_PORT_CONTAINER}/db?ssl=false"
        ],
        "volumes": [
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/DeadlineDatabase10/mongo/data_LOCAL:/opt/Thinkbox/DeadlineDatabase10/mongo/data",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}:ro"
        ]
      },
      "filebrowser": {
        "container_name": "mongo-filebrowser-10-2",
        "hostname": "mongo-filebrowser-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "image": "filebrowser/filebrowser",
        "restart": "always",
        "networks": [
          "repository"
        ],
        "depends_on": [
          "mongodb-10-2"
        ],
        "volumes": [
          "./databases/filebrowser/filebrowser.db:/filebrowser.db",
          "./configs/filebrowser/filebrowser.json:/.filebrowser.json",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/DeadlineDatabase10/mongo/data_LOCAL:/opt/Thinkbox/DeadlineDatabase10/mongo/data:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}:ro"
        ],
        "ports": [
          "${FILEBROWSER_PORT_HOST}:${FILEBROWSER_PORT_CONTAINER}"
        ]
      },
      "dagster_dev": {
        "container_name": "dagster-dev-10-2",
        "hostname": "dagster-dev-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "restart": "always",
        "networks": [
          "repository",
          "mongodb"
        ],
        "build": {
          "context": ".",
          "dockerfile": "./Dockerfile",
          "target": "dagster_dev",
          "args": [
            "DEADLINE_VERSION=$DEADLINE_VERSION",
            "PYTHON_VERSION=$PYTHON_VERSION"
          ]
        },
        "volumes": [
          "./configs/dagster_shared/workspace.yaml:/dagster/workspace.yaml:ro",
          "./configs/dagster_shared/dagster.yaml:/dagster/materializations/workspace.yaml:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}"
        ],
        "ports": [
          "${DAGSTER_DEV_PORT_HOST}:${DAGSTER_DEV_PORT_CONTAINER}"
        ]
      },
      "deadline-repository-installer-10-2": {
        "restart": "no",
        "container_name": "deadline-repository-installer-10-2",
        "hostname": "deadline-repository-installer-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "environment": [
          "INSTALLERS_ROOT=$INSTALLERS_ROOT"
        ],
        "depends_on": [
          "mongodb-10-2"
        ],
        "networks": [
          "mongodb",
          "repository"
        ],
        "build": {
          "context": ".",
          "dockerfile": "./Dockerfile",
          "target": "repo_installer",
          "args": [
            "DEADLINE_VERSION=$DEADLINE_VERSION",
            "PYTHON_VERSION=$PYTHON_VERSION"
          ]
        },
        "volumes": [
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/DeadlineRepository10:/opt/Thinkbox/DeadlineRepository10",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}:ro"
        ]
      },
      "deadline-client-installer-10-2": {
        "restart": "no",
        "container_name": "client-installer-10-2",
        "hostname": "client-installer-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "environment": [
          "INSTALLERS_ROOT=$INSTALLERS_ROOT"
        ],
        "depends_on": {
          "deadline-repository-installer-10-2": {
            "condition": "service_completed_successfully"
          }
        },
        "networks": [
          "mongodb",
          "repository"
        ],
        "build": {
          "context": ".",
          "dockerfile": "./Dockerfile",
          "target": "client_installer",
          "args": [
            "DEADLINE_VERSION=$DEADLINE_VERSION",
            "PYTHON_VERSION=$PYTHON_VERSION"
          ]
        },
        "volumes": [
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/Deadline10:/opt/Thinkbox/Deadline10",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/DeadlineRepository10:/opt/Thinkbox/DeadlineRepository10",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}:ro"
        ]
      },
      "deadline-rcs-runner-10-2": {
        "restart": "always",
        "build": {
          "context": ".",
          "dockerfile": "./Dockerfile",
          "args": [
            "DEADLINE_VERSION=$DEADLINE_VERSION",
            "PYTHON_VERSION=$PYTHON_VERSION"
          ],
          "target": "rcs_runner"
        },
        "container_name": "rcs-runner-10-2",
        "hostname": "rcs-runner-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "depends_on": {
          "deadline-client-installer-10-2": {
            "condition": "service_completed_successfully"
          }
        },
        "networks": [
          "mongodb",
          "repository"
        ],
        "volumes": [
          "./configs/Deadline10/deadline.ini:/var/lib/Thinkbox/Deadline10/deadline.ini:ro",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/Deadline10:/opt/Thinkbox/Deadline10",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/DeadlineRepository10:/opt/Thinkbox/DeadlineRepository10",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}:ro"
        ],
        "ports": [
          "${RCS_HTTP_PORT_HOST}:${RCS_HTTP_PORT_CONTAINER}"
        ]
      },
      "deadline-pulse-runner-10-2": {
        "restart": "always",
        "build": {
          "context": ".",
          "dockerfile": "./Dockerfile",
          "args": [
            "DEADLINE_VERSION=$DEADLINE_VERSION",
            "PYTHON_VERSION=$PYTHON_VERSION"
          ],
          "target": "pulse_runner"
        },
        "container_name": "pulse-runner-10-2",
        "hostname": "pulse-runner-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "depends_on": {
          "deadline-client-installer-10-2": {
            "condition": "service_completed_successfully"
          },
          "deadline-rcs-runner-10-2": {
            "condition": "service_started"
          }
        },
        "networks": [
          "mongodb",
          "repository"
        ],
        "volumes": [
          "./configs/Deadline10/deadline.ini:/var/lib/Thinkbox/Deadline10/deadline.ini:ro",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/Deadline10:/opt/Thinkbox/Deadline10",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/DeadlineRepository10:/opt/Thinkbox/DeadlineRepository10",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}:ro"
        ]
      },
      "deadline-worker-runner-10-2": {
        "restart": "always",
        "build": {
          "context": ".",
          "dockerfile": "./Dockerfile",
          "args": [
            "DEADLINE_VERSION=$DEADLINE_VERSION",
            "PYTHON_VERSION=$PYTHON_VERSION"
          ],
          "target": "worker_runner"
        },
        "container_name": "worker-runner-10-2",
        "hostname": "worker-runner-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "depends_on": {
          "deadline-client-installer-10-2": {
            "condition": "service_completed_successfully"
          },
          "deadline-rcs-runner-10-2": {
            "condition": "service_started"
          }
        },
        "networks": [
          "mongodb",
          "repository"
        ],
        "volumes": [
          "./configs/Deadline10/deadline.ini:/var/lib/Thinkbox/Deadline10/deadline.ini:ro",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/Deadline10:/opt/Thinkbox/Deadline10",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/DeadlineRepository10:/opt/Thinkbox/DeadlineRepository10",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}:ro"
        ]
      },
      "deadline-webservice-runner-10-2": {
        "restart": "always",
        "build": {
          "context": ".",
          "dockerfile": "./Dockerfile",
          "args": [
            "DEADLINE_VERSION=$DEADLINE_VERSION",
            "PYTHON_VERSION=$PYTHON_VERSION"
          ],
          "target": "webservice_runner"
        },
        "container_name": "webservice-runner-10-2",
        "hostname": "webservice-runner-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "depends_on": {
          "deadline-client-installer-10-2": {
            "condition": "service_completed_successfully"
          },
          "deadline-rcs-runner-10-2": {
            "condition": "service_started"
          }
        },
        "networks": [
          "mongodb",
          "repository"
        ],
        "volumes": [
          "./configs/Deadline10/deadline.ini:/var/lib/Thinkbox/Deadline10/deadline.ini:ro",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/Deadline10:/opt/Thinkbox/Deadline10",
          "${NFS_ENTRY_POINT}/test_data/10.2/opt/Thinkbox/DeadlineRepository10:/opt/Thinkbox/DeadlineRepository10",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}:ro"
        ],
        "ports": [
          "${WEBSERVICE_HTTP_PORT_HOST}:${WEBSERVICE_HTTP_PORT_CONTAINER}"
        ]
      }
    },
    "networks": {
      "mongodb": {
        "name": "network_mongodb-10-2"
      },
      "repository": {
        "name": "network_repository-10-2"
      },
      "ayon": {
        "name": "network_ayon-10-2"
      }
    }
  },
  {
    "services": {
      "kitsu-10-2": {
        "container_name": "kitsu-10-2",
        "hostname": "kitsu-10-2",
        "domainname": "farm.evil",
        "build": {
          "context": ".",
          "dockerfile": "Dockerfile",
          "target": "kitsu"
        },
        "restart": "always",
        "ports": [
          "${KITSU_PORT_HOST}:${KITSU_PORT_CONTAINER}",
          "5432:5432"
        ],
        "volumes": [
          "./postgres/postgresql.conf:/etc/postgresql/14/main/postgresql.conf:ro",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT}",
          "${NFS_ENTRY_POINT}:${NFS_ENTRY_POINT_LNS}"
        ]
      }
    }
  },
  {
    "services": {
      "postgres": {
        "image": "postgres:15",
        "restart": "unless-stopped",
        "healthcheck": {
          "test": [
            "CMD-SHELL",
            "pg_isready -U ayon"
          ],
          "interval": "5s",
          "timeout": "5s",
          "retries": 5
        },
        "expose": [
          5432
        ],
        "volumes": [
          "/etc/localtime:/etc/localtime:ro",
          "/data/share/nfs/databases/ayon/postgresql/data:/var/lib/postgresql/data"
        ],
        "environment": [
          "POSTGRES_USER=ayon",
          "POSTGRES_PASSWORD=ayon",
          "POSTGRES_DB=ayon"
        ]
      },
      "redis": {
        "image": "redis:alpine",
        "restart": "unless-stopped",
        "healthcheck": {
          "test": [
            "CMD-SHELL",
            "redis-cli ping | grep PONG"
          ],
          "interval": "5s",
          "timeout": "5s",
          "retries": 5
        },
        "expose": [
          6379
        ]
      },
      "server": {
        "image": "ynput/ayon:latest",
        "restart": "unless-stopped",
        "healthcheck": {
          "test": [
            "CMD",
            "curl",
            "-f",
            "http://localhost:5000/api/info"
          ],
          "interval": "10s",
          "timeout": "2s",
          "retries": 3
        },
        "depends_on": {
          "postgres": {
            "condition": "service_healthy"
          },
          "redis": {
            "condition": "service_started"
          }
        },
        "expose": [
          5000
        ],
        "ports": [
          "5000:5000"
        ],
        "volumes": [
          "./addons:/addons",
          "./storage:/storage",
          "/etc/localtime:/etc/localtime:ro"
        ]
      }
    },
    "volumes": {
      "db": {}
    }
  },
  {
    "services": {
      "postgres": {
        "container_name": "ayon-postgres-10-2",
        "hostname": "ayon-postgres-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "networks": [
          "repository",
          "mongodb"
        ],
        "volumes": [
          "/etc/localtime:/etc/localtime:ro",
          "${NFS_ENTRY_POINT}/databases/ayon/postgresql/data:/var/lib/postgresql/data"
        ]
      },
      "redis": {
        "container_name": "ayon-redis-10-2",
        "hostname": "ayon-redis-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "networks": [
          "repository",
          "mongodb"
        ]
      },
      "server": {
        "container_name": "ayon-server-10-2",
        "hostname": "ayon-server-10-2",
        "domainname": "${ROOT_DOMAIN}",
        "networks": [
          "repository",
          "mongodb"
        ],
        "ports": [
          "${AYON_PORT_HOST}:${AYON_PORT_CONTAINER}"
        ]
      }
    }
  }
]